for (x in ap.cells.markers){
to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(to.png)
#mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(ap.cells.markers, ".png", sep = ""))
#print(mypath)
#print(marker.list)
#png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#dev.off()
class(to.png)
}
dev.off()
class(to.png)
for (x in ap.cells.markers){
to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
#mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(ap.cells.markers, ".png", sep = ""))
#print(mypath)
#print(marker.list)
#png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#dev.off()
#class(to.png)
}
for (x in ap.cells.markers){
to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
#print(mypath)
#print(marker.list)
#png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#dev.off()
#class(to.png)
}
dev.off()
for (x in ap.cells.markers){
to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
#print(mypath)
#print(marker.list)
#png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
#class(to.png)
}
for (x in ap.cells.markers){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
#print(marker.list)
#png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
#class(to.png)
}
for (x in ap.cells.markers){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
#print(marker.list)
#png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#dev.off()
#class(to.png)
}
for (x in ap.cells.markers){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#class(to.png)
}
dev.off()
for (x in ap.cells.markers){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
#print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#class(to.png)
}
dev.off()
for (x in ap.cells.markers){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
#class(to.png)
}
dev.off()
for (x in ap.cells.markers){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers)
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print("Working on gene: ", x)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers)
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print("Working on gene: " x)
print(x)
mypath <- file.path("./","isl1_sib_counts_10X_figures",paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers)
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./", script_name, "_figures",paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers)
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./", paste0(script_name) "_figures",paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./", script_name"_figures",paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers)
####FeaturePlotToPNG####
figure_dir <- "isl1_sib_counts_10X_figures"
figure_dir <- "isl1_sib_counts_10X_figures"
FeaturePlotToPng <- function(marker.list) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./", figure_dir, paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers)
figure_dir <- "isl1_sib_counts_10X_figures"
FeaturePlotToPng <- function(marker.list, dir_name) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./", figure_dir, paste(x, ".png", sep = ""))
#print(Filing )
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE) )
dev.off()
}
}
FeaturePlotToPng(ap.cells.markers, dir_name = figure_dir)
FeaturePlotToPng(polar.cells.markers, dir_name = figure_dir)
FeaturePlotToPng(hair.cells.markers, dir_name = figure_dir)
ls
FeaturePlotToPng(mantle.cells.markers, dir_name = figure_dir)
FeaturePlotToPng(ring.cell.markers, dir_name = figure_dir)
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
central.cell.markers <- c("ccl20a.3","crabp2a","cxcl20", "dhrs3a", "dkk2", "fabp11a", "fabp7a",
"fgf3", "fhdc2", "gata2a", "hey2", "igfbp5a"  ,"isl1", "itgb4", "kitlga", "krt92", "lima1a", "mb", "mhc1lda", "ptprz1a", "rdh10a", "si:ch73-380n15.2", "sox21b","sult3st2",  "sult3st3", "abcg4b", "AL954146.1",
"abcg4b","bmp4", "CABZ01067232.1l", "ebf3a", "si:dkey-4p15.5 fgf22", "gata2b", "glula", "her15.1", "her6",
"hey2", "HSPA8", "krt18", "lfng", "mb", "mfng", "palm1a", "proca1","prox1a", "slc1a3a/glasta", "soul5", "tppp3", "vegfab", "zgc:165423")
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
central.cell.markers <- c("ccl20a.3","crabp2a","cxcl20", "dhrs3a", "dkk2", "fabp11a", "fabp7a",
"fgf3", "fhdc2", "gata2a", "hey2", "igfbp5a"  ,"isl1", "itgb4", "kitlga", "krt92", "lima1a", "mb", "mhc1lda", "ptprz1a", "rdh10a", "si:ch73-380n15.2", "sox21b","sult3st2",  "sult3st3", "abcg4b", "AL954146.1",
"abcg4b","bmp4", "ebf3a", "si:dkey-4p15.5 fgf22", "gata2b", "glula", "her15.1", "her6",
"hey2", "HSPA8", "krt18", "lfng", "mb", "mfng", "palm1a", "proca1","prox1a", "slc1a3a/glasta", "soul5", "tppp3", "vegfab", "zgc:165423")
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
central.cell.markers <- c("ccl20a.3","crabp2a","cxcl20", "dhrs3a", "dkk2", "fabp11a", "fabp7a",
"fgf3", "fhdc2", "gata2a", "hey2", "igfbp5a"  ,"isl1", "itgb4", "kitlga", "krt92", "lima1a", "mb", "mhc1lda", "ptprz1a", "rdh10a", "si:ch73-380n15.2", "sox21b","sult3st2",  "sult3st3", "abcg4b", "AL954146.1",
"abcg4b","bmp4", "ebf3a", "si:dkey-4p15.5", "fgf22", "gata2b", "glula", "her15.1", "her6",
"hey2", "HSPA8", "krt18", "lfng", "mb", "mfng", "palm1a", "proca1","prox1a", "slc1a3a/glasta", "soul5", "tppp3", "vegfab", "zgc:165423")
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
central.cell.markers <- c("ccl20a.3","crabp2a","cxcl20", "dhrs3a", "dkk2", "fabp11a", "fabp7a",
"fgf3", "fhdc2", "gata2a", "hey2", "igfbp5a"  ,"isl1", "itgb4", "kitlga", "krt92", "lima1a", "mb", "mhc1lda", "ptprz1a", "rdh10a", "si:ch73-380n15.2", "sox21b","sult3st2",  "sult3st3", "abcg4b", "AL954146.1",
"abcg4b","bmp4", "ebf3a", "si:dkey-4p15.5", "fgf22", "gata2b", "glula", "her15.1", "her6",
"hey2", "krt18", "lfng", "mb", "mfng", "palm1a", "proca1","prox1a", "slc1a3a/glasta", "soul5", "tppp3", "vegfab", "zgc:165423")
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
central.cell.markers <- c("ccl20a.3","crabp2a","cxcl20", "dhrs3a", "dkk2", "fabp11a", "fabp7a",
"fgf3", "fhdc2", "gata2a", "hey2", "igfbp5a"  ,"isl1", "itgb4", "kitlga", "krt92", "lima1a", "mb", "mhc1lda", "ptprz1a", "rdh10a", "si:ch73-380n15.2", "sox21b","sult3st2",  "sult3st3", "abcg4b", "AL954146.1",
"abcg4b","bmp4", "ebf3a", "si:dkey-4p15.5", "fgf22", "gata2b", "glula", "her15.1", "her6",
"hey2", "lfng", "mb", "mfng", "palm1a", "proca1","prox1a", "slc1a3a/glasta", "soul5", "tppp3", "vegfab", "zgc:165423")
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
central.cell.markers <- c("ccl20a.3","crabp2a","cxcl20", "dhrs3a", "dkk2", "fabp11a", "fabp7a",
"fgf3", "fhdc2", "gata2a", "hey2", "igfbp5a"  ,"isl1", "itgb4", "kitlga", "krt92", "lima1a", "mb", "mhc1lda", "ptprz1a", "rdh10a", "si:ch73-380n15.2", "sox21b","sult3st2",  "sult3st3", "abcg4b", "AL954146.1",
"abcg4b","bmp4", "ebf3a", "si:dkey-4p15.5", "fgf22", "gata2b", "glula", "her15.1", "her6",
"hey2", "lfng", "mb", "mfng", "palm1a", "proca1","prox1a", "slc1a3a", "soul5", "tppp3", "vegfab", "zgc:165423")
FeaturePlotToPng(central.cell.markers, dir_name = figure_dir)
VlnPlotToPng <- function(marker.list, dir_name) {
for (x in marker.list){
#to.png <- FeaturePlot(homeo.isl1_sib_10X, features = x, label = TRUE)
print(x)
mypath <- file.path("./", figure_dir, paste(x, "_vlnplot.png", sep = ""))
print(mypath)
png(file=mypath,width = 11, height = 9, units = 'in', res = 300)
print(VlnPlot(homeo.isl1_sib_10X, features = x, , pt.size = 0))
dev.off()
}
}
VlnPlotToPng(ap.cells.markers, dir_name = figure_dir)
VlnPlotToPng(polar.cells.markers, dir_name = figure_dir)
VlnPlotToPng(hair.cells.markers, dir_name = figure_dir)
VlnPlotToPng(mantle.cells.markers,dir_name = figure_dir)
VlnPlotToPng(ring.cell.markers, dir_name = figure_dir)
VlnPlotToPng(central.cell.markers, dir_name = figure_dir)
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
return(list(top10.df, feature.plot, vln.plt))
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
Top10GeneCellIdentity(marker.list = polar.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
print(vln.plt)
return(list(top10.df, feature.plot, vln.plt))
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
#vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
return(list(top10.df, feature.plot))
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
#feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
#return(list(top10.df, feature.plot))
print(top10.df)
print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
#feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
#return(list(top10.df, feature.plot))
print(top10.df)
print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
#feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
#return(list(top10.df, feature.plot))
print(top10.df)
print(gene.list)
#print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
dev.off()
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
#vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
#return(list(top10.df, feature.plot))
print(top10.df)
print(gene.list)
print(feature.plot)
dev.off()
#print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
####Save Environment####
#default save RData env
save.image("../data/workspace_homeo_isl1_sib_10X.RData")
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
#vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
dev.off()
return(list(top10.df, feature.plot))
#print(top10.df)
#print(gene.list)
#print(feature.plot)
#print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
levels(x = homeo.isl1_sib_10X@idents)
levels(homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC))
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
#vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
dev.off()
return(list(top10.df, feature.plot))
#print(top10.df)
#print(gene.list)
#print(feature.plot)
#print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC)) %>% select(df, Gene.name.uniq,avg_logFC, cluster)
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
#dev.off()
return(list(top10.df, feature.plot, vln.plt))
dev.off()
#print(top10.df)
#print(gene.list)
#print(feature.plot)
#print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
#####Top10GeneCellIdentityFunction#####
Top10GeneCellIdentity <- function(marker.list, df){
#This function will return a adjusted dataframe for the genes with the 10 (or less) highest avg_logFC
#and its corresponding cluster
#it will also generate a FeaturePlot and Violin Plot corresponding
#this function may be helpful as most canonical markers have low signal, this will discern what signal is highest to help identify clusters
top10.df <-filter(df, Gene.name.uniq == marker.list) %>% top_n(n = 10, wt = (avg_logFC)) %>% arrange(desc(avg_logFC)) %>% select(df, .data$Gene.name.uniq,.data$avg_logFC, .data$cluster)
gene.list <- unique(top10.df$Gene.name.uniq)
feature.plot <- FeaturePlot(homeo.isl1_sib_10X, features = gene.list, label = TRUE)
vln.plt <- VlnPlot(homeo.isl1_sib_10X, features = gene.list, pt.size = 0)
#print(vln.plt)
#dev.off()
return(list(top10.df, feature.plot, vln.plt))
dev.off()
#print(top10.df)
#print(gene.list)
#print(feature.plot)
#print(vln.plt)
}
Top10GeneCellIdentity(marker.list = ap.cells.markers, df = all.markers.homeo.isl1_sib_10X)
setwd("/Volumes/easystore/SIMR_2019/pio-lab/scripts")
load("../data/workspace_homeo_isl1_sib_10X.RData")
homeo.isl1_sib_10X
head(homeo.isl1_sib_10X@meta.data)
head(isl1_sib_10X.data)
homeo.isl1_sib_10X[[]]
GetAssayData(object = homeo.isl1_sib_10X, slot = "counts")
#install.packages("Seurat")
library(Seurat)
# library(plotly)
#install.packages("future")
# library(future)
library(dplyr)
library(ggplot2)
library(cowplot)
# library(gridExtra)
# library(ggrepel)
library(ggrepel)
options(future.globals.maxSize = 5000 * 1024^2)
setwd("/Volumes/easystore/SIMR_2019/pio-lab/scripts")
GetAssayData(object = homeo.isl1_sib_10X, slot = "counts")
exp.matrix <- GetAssayData(object = homeo.isl1_sib_10X, slot = "counts")
View(exp.matrix)
head(exp.matrix)
isl1_sib_10X.data
homeo.isl1_sib_10X@meta.data
isl1_sib_10X.data[1:3, 1:30]
library(Seurat)
# library(plotly)
#install.packages("future")
# library(future)
library(dplyr)
library(ggplot2)
library(cowplot)
# library(gridExtra)
# library(ggrepel)
library(ggrepel)
options(future.globals.maxSize = 5000 * 1024^2)
View(meta)
#################Add Treatment column to metadata############
homeo.isl1_sib_10X@meta.data$treatment <- "homeo"
head(homeo.isl1_sib_10X@meta.data)
save.image("../data/workspace_homeo_isl1_sib_10X.RData")
homeo.isl1_sib_10X[["RNA"]]@scale.data
head(homeo.isl1_sib_10X[["RNA"]]@scale.data)
rownames(homeo.isl1_sib_10X[["RNA"]]@scale.data)
colnames(homeo.isl1_sib_10X[["RNA"]]@scale.data)
dim(homeo.isl1_sib_10X[["RNA"]]@scale.data)
